{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","clientsfirstName","setClientsFirstName","clientsLastName","setClientsLastName","clientsEmail","setClientsEmail","appointmentClient","setAppointmentClient","clientsComments","setClientsComments","clientsTitle","setClientsTitle","className","placeholder","onChange","event","target","value","htmlFor","type","id","firstname","lastname","email","appointment","comments","onClick","Axios","post","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQA6EeA,MApEf,WAGI,MAAgDC,mBAAS,IAAzD,mBAAOC,EAAP,KAAyBC,EAAzB,KACA,EAA8CF,mBAAS,IAAvD,mBAAOG,EAAP,KAAwBC,EAAxB,KACA,EAAwCJ,mBAAS,IAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAAkDN,mBAAS,IAA3D,mBAAOO,EAAP,KAA0BC,EAA1B,KACA,EAA8CR,mBAAS,IAAvD,mBAAOS,EAAP,KAAwBC,EAAxB,KACA,EAAwCV,mBAAS,IAAjD,mBAAOW,EAAP,KAAqBC,EAArB,KAeF,OACE,sBAAKC,UAAU,MAAf,UACI,wDAEA,cAAC,IAAD,CAAyBC,YAAY,8CAA8CC,SAAU,SAACC,GAC1FR,EAAqBQ,EAAMC,OAAOC,UAJ1C,qBAUI,iCACI,uBAAOC,QAAU,YAAjB,yBACA,uBAAOC,KAAO,OAAOC,GAAK,YAAYC,UAAY,YAAYR,YAAY,yBAAsBC,SAAU,SAACC,GACvGd,EAAoBc,EAAMC,OAAOC,UAGrC,uBAAOC,QAAU,WAAjB,mBACA,uBAAOC,KAAO,OAAOC,GAAK,WAAWE,SAAW,WAAWT,YAAY,mBAAmBC,SAAU,SAACC,GACjGZ,EAAmBY,EAAMC,OAAOC,UAGpC,uBAAOC,QAAU,QAAjB,qBACA,uBAAOC,KAAO,OAAOC,GAAK,QAAQG,MAAQ,QAAOV,YAAY,qBAAqBC,SAAU,SAACC,GACzFV,EAAgBU,EAAMC,OAAOC,UAGjC,uBAAOC,QAAU,cAAjB,iCACA,uBAAOC,KAAO,OAAOC,GAAK,cAAcI,YAAc,cAAaX,YAAY,uBAAoBC,SAAU,SAACC,GAC1GJ,EAAgBI,EAAMC,OAAOC,UAGjC,uBAAOC,QAAU,WAAjB,4BACA,uBAAOC,KAAO,OAAOC,GAAK,WAAUK,SAAW,WAAUZ,YAAY,yBAAyBC,SAAU,SAACC,GACrGN,EAAmBM,EAAMC,OAAOC,UAGpC,wBAAQS,QAjDM,WAElBC,IAAMC,KAAK,8BAA8B,CACrC5B,iBAAmBA,EACnBE,gBAAkBA,EAClBE,aAAeA,EACfE,kBAAoBA,EACpBE,gBAAkBA,EAClBE,aAAeA,KAyCf,+CCzDGmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.dc1ac223.chunk.js","sourcesContent":["\r\nimport './App.css';\r\nimport React, {useState} from 'react';\r\nimport {DateTimePickerComponent} from \"@syncfusion/ej2-react-calendars\";\r\n\r\n//Permit to create Http request and them to a back end to front\r\nimport Axios from 'axios';\r\n\r\n\r\nfunction App() {\r\n\r\n\r\n    const [clientsfirstName, setClientsFirstName] = useState(\"\");\r\n    const [clientsLastName, setClientsLastName] = useState(\"\");\r\n    const [clientsEmail, setClientsEmail] = useState(\"\");\r\n    const [appointmentClient, setAppointmentClient] = useState(\"\");\r\n    const [clientsComments, setClientsComments] = useState(\"\");\r\n    const [clientsTitle, setClientsTitle] = useState(\"\");\r\n\r\n\r\n    const addAppointment =() => {\r\n        //Insert information\r\n        Axios.post('http//localhost:3001/insert',{\r\n            clientsfirstName : clientsfirstName,\r\n            clientsLastName : clientsLastName,\r\n            clientsEmail : clientsEmail,\r\n            appointmentClient : appointmentClient,\r\n            clientsComments : clientsComments,\r\n            clientsTitle : clientsTitle,\r\n\r\n        });\r\n    };\r\n  return (\r\n    <div className=\"App\">\r\n        <h1> Prise de rendez-vous </h1>\r\n\r\n        <DateTimePickerComponent placeholder=\"Selectionnez l'heure et date du rendez-vous\" onChange={(event)=>{\r\n            setAppointmentClient(event.target.value);\r\n        }}></DateTimePickerComponent>\r\n\r\n\r\n        //Appointment form\r\n\r\n        <form >\r\n            <label htmlFor = 'firstname' > Prénom </label>\r\n            <input type = 'text' id = 'firstname' firstname = 'firstname' placeholder=\"Entrer votre prénom\" onChange={(event)=>{\r\n                setClientsFirstName(event.target.value);\r\n            }}/>\r\n\r\n            <label htmlFor = 'lastname' > Nom </label>\r\n            <input type = 'text' id = 'lastname' lastname = 'lastname' placeholder=\"Entrer votre nom\" onChange={(event)=>{\r\n                setClientsLastName(event.target.value);\r\n            }}/>\r\n\r\n            <label htmlFor = 'email' > Email </label>\r\n            <input type = 'text' id = 'email' email = 'email'placeholder=\"Entrer votre email\" onChange={(event)=>{\r\n                setClientsEmail(event.target.value);\r\n            }}/>\r\n\r\n            <label htmlFor = 'appointment' > Titre rendez-vous </label>\r\n            <input type = 'text' id = 'appointment' appointment = 'appointment'placeholder=\"Entrez l'intitulé\" onChange={(event)=>{\r\n                setClientsTitle(event.target.value);\r\n            }} />\r\n\r\n            <label htmlFor = 'comments' > Commentaires </label>\r\n            <input type = 'text' id = 'comments'comments = 'comments'placeholder=\"Ajouter un commentaire\" onChange={(event)=>{\r\n                setClientsComments(event.target.value);\r\n            }} />\r\n\r\n            <button onClick={addAppointment}> Envoyer le rendez - vous </button>\r\n\r\n        </form>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}